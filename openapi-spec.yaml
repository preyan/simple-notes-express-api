openapi: 3.0.0
info:
  title: Simple Notes REST Api Docs
  version: 0.0.3
  description: '<strong>Base URL :</strong> <code>http://localhost:5000/api/v1</code>'
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      format: JWT
security:
  - bearerAuth: []
servers:
  - url: 'http://localhost:5000/api/v1'
externalDocs:
  description: 'http://localhost:5000/api/v1/swagger.json'
  url: 'http://localhost:5000/api/v1/swagger.json'
paths:
  /notes/:
    get:
      summary: Get all notes
      description: Retrieve all notes.
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Notes retrieved successfully.
  /notes/create:
    post:
      summary: Create a new note
      description: Create a new note with file upload using multer middleware.
      security:
        - bearerAuth: []
      consumes:
        - multipart/form-data
      parameters:
        - in: formData
          name: images
          type: file
          description: Images for the note.
      responses:
        '200':
          description: Note created successfully.
  '/notes/delete/{id}':
    delete:
      summary: Delete a note by ID
      description: Delete a note by its ID.
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          type: string
          required: true
          description: ID of the note to be deleted.
      responses:
        '200':
          description: Note deleted successfully.
  '/notes/update/{id}':
    put:
      summary: Update a note by ID
      description: Update a note by its ID.
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          type: string
          required: true
          description: ID of the note to be updated.
      responses:
        '200':
          description: Note updated successfully.
  /users/register:
    post:
      summary: Register a new user
      description: Register a new user with an avatar upload.
      consumes:
        - multipart/form-data
      parameters:
        - in: formData
          name: avatar
          type: file
          description: User's avatar image file.
      responses:
        '200':
          description: User registered successfully.
  /users/login:
    post:
      summary: User login
      description: Login with user credentials.
      responses:
        '200':
          description: User logged in successfully.
  /users/healthcheck:
    get:
      summary: Health check
      description: Check the health of the user controller.
      responses:
        '200':
          description: Health check successful.
  /users/logout:
    post:
      summary: Logout a user
      description: Logout the currently authenticated user.
      security:
        - bearerAuth: []
      responses:
        '200':
          description: User logged out successfully.
  /users/refresh-token:
    post:
      summary: Refresh access token
      description: Refresh the access token for an authenticated user.
      responses:
        '200':
          description: Access token refreshed successfully.
tags: []
